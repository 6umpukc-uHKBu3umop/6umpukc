#!/usr/bin/env perl
use 5.016;
use warnings;
use Cwd qw(cwd getcwd);
use File::Basename;
use File::Path qw(make_path remove_tree);
use File::Copy;
use File::Find qw(finddepth);
use Config;

die;

sub action_minify {
	my $basePath = shift;
	if ((scalar @ARGV != 2) || !($ARGV[1] eq 'all')) {
		$basePath = getcwd();
	}
	finddepth(sub {
		if (($_ eq '.') || ($_ eq '..')) {
			return;
		}
		my $f = $File::Find::name;
		my $destFile = $f;
		my $is_css = 0;
		if ((substr($_, -3) eq '.js') && (substr($_, -7) ne '.min.js')) {
			$destFile =~ s/\.js/\.min.js/gi;
		} elsif ((substr($_, -4) eq '.css') && (substr($_, -8) ne '.min.css')) {
			$destFile =~ s/\.css/\.min.css/gi;
			$is_css = 1;
		} else {
			return;
		}
		if (!is_bx_debug()) {
			say "processing $f -> $destFile ...";
		}
		my $toolPath = $RealBin . '/.dev/bin/esbuild/node_modules/.bin/esbuild'
			. ($is_css? ' --loader=css' : '')
			. ' --minify';
		action_conv_utf($f);
		run("cat '$f' | $toolPath > '$destFile'");
	}, $basePath);
}

sub action_lamp_install {
	if (is_ubuntu()) {
		say '';
		say '# Install php, apache2, mysql and tools...';
		sudo_run(
            'apt install'
			. ' unzip wget curl dos2unix pwgen sshpass screen'
			. ' php apache2 libapache2-mod-php mysql-server mysql-client php-mysql'
			. ' php-mbstring php-opcache php-zip php-xml php-curl php-gd php-sqlite3 php-imagick'
			. ' php-xdebug'
			. ' msmtp'
        );
        sudo_run('apt install optipng jpegoptim pngquant');
        sudo_run('apt install rinetd');

		sudo_run('a2enmod rewrite');
		sudo_run('a2enmod proxy');
		sudo_run('a2enmod proxy_http');

		sudo_run('snap install node --classic');

        # patch configs
		my $phpContent = file_get_contents($RealBin . '/.template/bitrix.php.ini');
		my $phpVersion = '7.0';
		if (-d '/etc/php/7.4/') {
			$phpVersion = '7.4';
		} elsif (-d '/etc/php/7.2/') {
			$phpVersion = '7.2';
		} elsif (-d '/etc/php/7.1/') {
			$phpVersion = '7.1';
		}
		sudo_patch_file('/etc/php/' . $phpVersion . '/apache2/php.ini', $phpContent);
		sudo_patch_file('/etc/php/' . $phpVersion . '/cli/php.ini', $phpContent);

		my $homePath = $ENV{'HOME'};
		my $extWww = $homePath . '/ext_www';
		if (! -d $extWww) {
			mkdir $extWww;
		}
		sudo_run('usermod -a -G www-data ' . $ENV{'USER'});
		#run 'chmod +x /home/' . $ENV{'USER'};

		say '';
		say '# Mysql config setup...';
		sudo_run('mysql_secure_installation');
		say '';
		say '# Mysql config check...';
		sudo_run('mysqladmin -p -u root version');

		my $mysqlContent = file_get_contents($RealBin . '/.template/ubuntu18.04/bitrix.my.cnf');
		sudo_patch_file('/etc/mysql/my.cnf', $mysqlContent);

		say '';
		say '# Mail sender setup...';
		copy($RealBin . '/.template/.msmtprc', $homePath . '/.msmtprc');
		sudo_run('chown www-data:www-data ' . $homePath . '/.msmtprc');
		sudo_run('chmod 0600 ' . $homePath . '/.msmtprc');
		if (-f '/etc/msmtprc') {
			sudo_run('unlink /etc/msmtprc');
		}
		sudo_run('ln -s ' . $homePath . '/.msmtprc /etc/msmtprc');

		say '';
		say '# Setup locale for windows-1251...';
		sudo_run('locale-gen ru_RU.CP1251');
		sudo_run('dpkg-reconfigure locales');

		# check locale:
		#	`locale -a | grep ru`
		#	`less /usr/share/i18n/SUPPORTED | grep ru_RU | grep CP1251`
		# for centos:
		#	`localedef -c -i ru_RU -f CP1251 ru_RU.CP1251`
	}
}

sub random_password {
	my $length = 20;
	my $result = '';
	my @chars = ('A'..'Z', 'a'..'z', '0'..'9', '!', '_', '-', '.', ',', '|');
	my @addchars = ('!', '_', '-', '.', ',', '|');
	my @digits = ('0'..'9');
	$result .= $chars[int(rand(@chars))] for 1..$length;
	$result .= $addchars[int(rand(@addchars))];
	$result = $addchars[int(rand(@addchars))] . $result;
	$result .= $digits[int(rand(@digits))];
	return $result;
}

sub random_name {
	my $length = 9;
	my $result = '';
	my @chars = ('A'..'Z', 'a'..'z', '0'..'9');
	$result .= $chars[int(rand(@chars))] for 1..$length;
	return 'usr' . $result;
}

sub action_site_init {
	our $site_root;
	my $site_exists = ($site_root ne '') && (exists $ENV{'SITE_ENCODING'});
	my $path = getcwd();
	my $encoding = $ARGV[1]? $ARGV[1] : 'win'; # win / utf / utflegacy
	my $sitehost = basename($path);

	if (is_ubuntu()) {
		run 'bx fixdir';
		my $dbpassword = random_password();
		my $dbname = random_name();

		if ($site_exists) {
			$encoding = $ENV{'SITE_ENCODING'};
			$dbpassword = $ENV{'DB_PASSWORD'};
			$dbname = $ENV{'DB_NAME'};
			$path = $site_root;
			$sitehost = basename($path);
		} else {
			my $basePath = shift;
			my $https = $ARGV[2]? $ARGV[2] : ''; # http or https

			my $siteconf = '';
			my $dbconf = '';
			if ($encoding eq 'win') {
				$siteconf = 'win1251site.conf';
				$dbconf = 'win1251dbcreate.sql';
			} elsif ($encoding eq 'utflegacy') {
				$siteconf = 'utf8legacysite.conf';
				$dbconf = 'utf8dbcreate.sql';
				$encoding = 'utf';
			} else {
				$siteconf = 'utf8site.conf';
				$dbconf = 'utf8dbcreate.sql';
				$encoding = 'utf';
			}
			if ($https eq 'https') {
				$siteconf = $https . $siteconf;
			}

			# init site cont files
			$siteconf = $RealBin . '/.template/ubuntu18.04/' . $siteconf;
			my $content = file_get_contents($siteconf);
			$content =~ s|/home/user/ext_www/bitrix\-site\.com|$path|g;
			$content =~ s|bitrix\-site\.com|$sitehost|g;
			my $currentUser = $ENV{'USER'};
			$content =~ s|/home/user/.ssl/|/home/$currentUser/.ssl/|g;
			$siteconf = $path . '/.apache2.conf.tmp';
			file_put_contents($siteconf, $content);

			# init database
			$dbconf = $RealBin . '/.template/ubuntu18.04/' . $dbconf;
			my $sqlContent = file_get_contents($dbconf);
			$sqlContent =~ s/bitrixdb1/$dbname/g;
			$sqlContent =~ s/bitrixuser1/$dbname/g;
			$sqlContent =~ s/bitrixpassword1/$dbpassword/g;
			$dbconf = $path . '/.dbcreate.tmp.sql';
			file_put_contents($dbconf, $sqlContent);
			sudo_run('mysql -u root < ' . $dbconf);
			unlink($dbconf);

			my $destpath = '/etc/apache2/sites-available/' . $sitehost . '.conf';
			say '';
			say '# Apache2 site config -> ' . $destpath;
			say '';
			say $content;
			sudo_run('mv ' . $siteconf . ' ' . $destpath);
			sudo_run('a2ensite ' . $sitehost . '.conf');
			sudo_run('systemctl reload apache2');
		}

		my %wwwFiles = (
			# adminer
			'.template/adminer/index.php' => 'adminer/index.php',
			'.template/adminer/adminer.php' => 'adminer/adminer.php',

			# bitrix scripts
			'.template/bitrixsetup.php' => 'bitrixsetup.php',
			'.template/restore.php' => 'restore.php',
			'.template/bitrix_server_test.php' => 'bitrix_server_test.php',

			'.template/.env' => '.env',
			'.template/www_' . $encoding . '/bitrix/.settings.php' => 'bitrix/.settings.php',
			'.template/www_' . $encoding . '/bitrix/.settings_extra.php' => 'bitrix/.settings_extra.php',
			'.template/www_' . $encoding . '/bitrix/php_interface/dbconn.php' => 'bitrix/php_interface/dbconn.php',
			'.template/www_' . $encoding . '/bitrix/php_interface/after_connect.php' => 'bitrix/php_interface/after_connect.php',
			'.template/www_' . $encoding . '/bitrix/php_interface/after_connect_d7.php' => 'bitrix/php_interface/after_connect_d7.php',
		);
		my %replaceIgnoredFiles = (
			'adminer.php' => 1,
		);
		if ($site_exists) {
			delete $wwwFiles{'.template/.env'};
		}

		# init folders and files from template
		if (! -d $path . '/adminer') {
			mkdir $path . '/adminer';
		}
		if (! -d $path . '/bitrix') {
			mkdir $path . '/bitrix';
		}
		if (! -d $path . '/bitrix/php_interface') {
			mkdir $path . '/bitrix/php_interface';
		}
		for my $fname (keys %wwwFiles) {
			if (exists $replaceIgnoredFiles{basename($fname)}) {
				copy($RealBin . '/' . $fname, $path . '/' . $wwwFiles{$fname});
			} else {
				my $envContent = file_get_contents($RealBin . '/' . $fname);
				$envContent =~ s/dbname1/$dbname/g;
				$envContent =~ s/dbuser1/$dbname/g;
				$envContent =~ s/dbpassword12345/$dbpassword/g;
				$envContent =~ s/111encoding111/$encoding/g;
				$envContent =~ s/http\:\/\/bitrixsolution01\.example\.org\//https\:\/\/$sitehost\//g;
				file_put_contents($path . '/' . $wwwFiles{$fname}, $envContent);
			}
		}

		run 'bx fixdir';
	} elsif (is_mingw()) {
		my %wwwFiles = (
			'.template/.env' => '.env',
			'.template/sublime-text/bitrix-solution-example.sublime-project' => 'solution.sublime-project',
		);
		for my $fname (keys %wwwFiles) {
			my $destPath = $path . '/' . $wwwFiles{$fname};
			if (!-f $destPath) {
				#TODO!!! для .env если настройки bitrix существуют - взять настройку utf/win из .settings.php
				copy($RealBin . '/' . $fname, $destPath);
			}
		}
	}
}

# main

my %actions = (
	'lamp-install' => \&action_lamp_install,
	'site-init' => \&action_site_init,

	'minify' => \&action_minify,
);
