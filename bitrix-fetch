#!/usr/bin/env perl
use 5.016;
use warnings;

sub request_useragent {
    return 'Mozilla/5.0 (X11; Linux x86_64; rv:66.0) Gecko/20100101 Firefox/66.0';
}

sub request_get {
    if (qx{which curl} eq '') {
        return undef;
    }
    my ($url, $outfile) = @_;
    my $result = '';
    my $cmd = "curl -L '$url'"
        . " -A '" . request_useragent() . "'";
    if ($outfile && $outfile ne '') {
        $cmd .= " -o '$outfile'";
    }
    $result = qx{$cmd};
    return $result;
    #elsif (qx{which wget} ne '') {
    #    $result = qx{wget --quiet --output-document=- '$url'};
    #}
}

sub archive_extract {
    if (qx{which tar} eq '') {
        return undef;
    }
    my ($src, $dest) = @_;
    my $result = '';
    my $cmd = "tar -xvzf '$src' '$dest'";
    $result = qx{$cmd};
    return $result;
}

sub bitrix_minimize {
    my @removeDirs = (
        # ненужные компоненты
        'bitrix/modules/iblock/install/components/bitrix',
        'bitrix/modules/fileman/install/components/bitrix',
        # ненужные модули
        'bitrix/modules/highloadblock',
        'bitrix/modules/perfmon',
        'bitrix/modules/bitrixcloud',
        'bitrix/modules/translate',
        'bitrix/modules/compression',
        'bitrix/modules/landing',
        'bitrix/modules/seo',
        'bitrix/modules/search',
        # ненужные демо решения
        'bitrix/modules/bitrix.sitecorporate',
        'bitrix/wizards/bitrix/demo',
    );
    for my $dir (@removeDirs) {
		if (-d $dir) {
			my $cmd = "rm -Rf '$dir'";
			qx{$cmd};
		}
    }
}

sub bitrix_micromize {
    my %bitrixExcludeDirs = (
		'cache' => 1,
		'managed_cache' => 1,
		'modules' => 1,
		#'php_interface' => 1,
	);
	my %bitrixExcludeFiles = (
		'.settings.php' => 1,
	);
	my $dirName = './bitrix';
	my $dh;
	my $res = opendir $dh, $dirName;
	if (!$res) {
		die('Could not open ' . $dirName . ' for reading ' . $! . "\n");
	}
	my @files = readdir $dh;
	for my $f (@files) {
		if ($f eq '.' or $f eq '..') {
			next;
		}
		if (exists $bitrixExcludeDirs{$f} or exists $bitrixExcludeFiles{$f}) {
			next;
		}
		$f = $dirName . '/' . $f;
		if (-d $f) {
			my $cmd = "rm -Rf '$f'";
			qx{$cmd};
		} elsif (-f $f) {
			unlink($f);
		}
	}
	closedir $dh;

	my @removeFiles = (
        '.access.php',
		'.htaccess',
		'index.php',
		'install.config',
		'license.html',
		'license.php',
		'readme.html',
		'readme.php',
		'web.config',
    );
    for my $f (@removeFiles) {
		if (-f $f) {
			unlink($f);
		}
    }
}

my %urlEditions = (
	'micro'    => 'https://www.1c-bitrix.ru/download/start_encode_php5.tar.gz',
    'core'     => 'https://www.1c-bitrix.ru/download/start_encode_php5.tar.gz',
    'start'    => 'https://www.1c-bitrix.ru/download/start_encode_php5.tar.gz',
    'business' => 'https://www.1c-bitrix.ru/download/business_encode_php5.tar.gz',
    'crm'      => 'https://www.1c-bitrix.ru/download/portal/bitrix24_encode_php5.tar.gz',
);
my $outputFile = '.bitrix.tar.gz';
my $edition = '';
if (scalar @ARGV == 0) {
    $edition = 'start';
}
else {
    $edition = $ARGV[0];
}
if (!exists $urlEditions{$edition}) {
    $edition = 'start';
}
if (-f $outputFile) {
    unlink($outputFile);
}

my $srcUrl = $urlEditions{$edition};
say "Loading $srcUrl...";
request_get($srcUrl, $outputFile);
if (!-f $outputFile) {
    die('Error on loading bitrix edition ' . $srcUrl);
}

say 'Extracting files...';
archive_extract($outputFile, './');
unlink($outputFile);

if ($edition eq 'core') {
	say 'Minimize...';
    bitrix_minimize();
} elsif ($edition eq 'micro') {
	say 'Micromize...';
    bitrix_minimize();
	bitrix_micromize();
}
